name: Docker

on:
  push:
    branches: [ "master", "main" ]
    paths:
      - 'Dockerfile'
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master", "main" ]
    paths:
      - 'Dockerfile'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: vkarapatakis/java-build-tools
  IMAGE_TAG: 3.8.6-node16

jobs:
  build:
    permissions:
      # for actions/checkout to fetch code
      contents: read
      # for github/codeql-action/upload-sarif to upload SARIF results
      security-events: write
      # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      actions: read

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=latest
            type=sha,format=long

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Codacy Analysis
      - name: Run Codacy Analysis CLI
        if: github.event_name == 'pull_request'
        uses: codacy/codacy-analysis-cli-action@v4
        continue-on-error: true
        with:
          output: codacy.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        if: github.event_name == 'pull_request'
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: codacy.sarif

      # Aqua Security Trivy
      - name: Run Trivy vulnerability scanner
        if: github.event_name == 'pull_request'
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.event_name == 'pull_request'
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: 'trivy.sarif'

      # Snyk
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.IMAGE_NAME }}:latest
          args: --file=Dockerfile
          sarif: true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: snyk.sarif

      # Anchore Container Scan
      - name: Run the Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
        uses: anchore/scan-action@v3
        continue-on-error: true
        id: anchore-scan
        with:
          image: '${{ env.IMAGE_NAME }}:latest'
          fail-build: false
          acs-report-enable: true

      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
